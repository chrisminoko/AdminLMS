@model BackEnd.Models.OnlineShop.Review

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutShop.cshtml";
}

<div class="card">
    <div class="card-body">
        <br />
        <br />
        <br />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3>Leave Review</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.reviewText, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.TextAreaFor(model => model.reviewText, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.reviewText, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-md-offset-2 col-md-10">
                        <input  onclick="return validateData();" type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>



<script type="text/javascript">
    function validateData() {
        swal({
            title: "Review Added",
            text: "You add a new product review",
            icon: "success",
            button: "Aww yiss!",
        });
    }
</script>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
